unit uCadCategoria;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uTelaHeranca, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, JvDataSource, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, Vcl.DBCtrls, JvDBControls, Vcl.Grids, Vcl.DBGrids,
  JvExDBGrids, JvDBGrid, Vcl.StdCtrls, Vcl.Buttons, JvExButtons, JvBitBtn,
  Vcl.Mask, JvExMask, JvToolEdit, JvMaskEdit, Vcl.ExtCtrls, JvExExtCtrls,
  JvExtComponent, JvPanel, Vcl.ComCtrls, JvgPage, cCadCategoria, uconexaodb, uEnum;

type
  TfrmCadCategoria = class(TfrmHeranca)
    edtCategoriaId: TLabeledEdit;
    edtDescricao: TLabeledEdit;
    edtNomeCategoria: TLabeledEdit;
    procedure btnAlterarClick(Sender: TObject);
  private
    oCategoria: TCategoria;
     procedure btnPesquisarClick(Sender: TObject); override;
  published
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
  public
        EstadoCadastro: TEstadoCadastro;

    function Apagar: boolean; override;
    function Gravar(EstadoCadastro:TEstadoCadastro): boolean; override;
  end;

var
  frmCadCategoria: TfrmCadCategoria;

implementation

{$R *.dfm}

function TfrmCadCategoria.Apagar: boolean;
begin
if oCategoria.Selecionar(QryListagem.FieldByName('id_categoria').AsInteger) then
  result:= oCategoria.Apagar;
end;

function TfrmCadCategoria.Gravar(EstadoCadastro: TEstadoCadastro): boolean;
begin
  if edtCategoriaId.Text <> Emptystr then
    oCategoria.id_categoria := StrToInt(edtCategoriaId.Text)
  else
    oCategoria.id_categoria := 0;

  oCategoria.nome_categoria := edtNomeCategoria.Text;
  oCategoria.descricao_categoria := edtDescricao.Text;

  if (EstadoCadastro = ecNovo) then
  begin
    Result := oCategoria.Gravar;
    ShowMessage('Categoria gravada com sucesso!');
  end
  else if (EstadoCadastro = ecAlterar) then
  begin
    Result := oCategoria.Atualizar;
    ShowMessage('Categoria atualizada com sucesso!');
  end
  else
    Result := False;
end;
procedure TfrmCadCategoria.btnAlterarClick(Sender: TObject);
begin
if oCategoria.Selecionar(QryListagem.FieldByName('id_categoria').AsInteger) then
begin
  edtCategoriaId.Text:=IntToStr(oCategoria.id_categoria);
  edtNomeCategoria.Text:=oCategoria.nome_categoria;
  edtDescricao.Text:=oCategoria.descricao_categoria;
end
else begin
  btnCancelar.Click;
  abort
end;

  inherited;

end;

procedure TfrmCadCategoria.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  if Assigned(oCategoria) then
    FreeAndNil(oCategoria);

  qryListagem.Close;
end;

procedure TfrmCadCategoria.FormCreate(Sender: TObject);
begin
  oCategoria := TCategoria.Create(dtmPrincipal.ConexaoDB);
  qryListagem.Connection := dtmPrincipal.ConexaoDB;
  dtsListagem.DataSet := qryListagem;
  grdListagem.DataSource := dtsListagem;
  btnNavegation.DataSource := dtsListagem;
end;

procedure TfrmCategoria.btnPesquisarClick(Sender: TObject);
var
  Filtro: string;
begin
  Filtro := Trim(edtPesquisar.Text);

  qryCadastro.Close;
  qryCadastro.SQL.Clear;
  qryCadastro.SQL.Add('SELECT * FROM Categoria');

  if Filtro <> '' then
  begin
    qryCadastro.SQL.Add('WHERE nome_categoria LIKE :p1 OR descricao_categoria LIKE :p2');
    qryCadastro.ParamByName('p1').AsString := '%' + Filtro + '%';
    qryCadastro.ParamByName('p2').AsString := '%' + Filtro + '%';
  end;

  qryCadastro.Open;
end;


end.

